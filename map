import math
import networkx as nx
import matplotlib.pyplot as plt

# --- Étape 1 : Données géographiques ---
villes = {
    "Paris": (48.8566, 2.3522),
    "Marseille": (43.2965, 5.3698),
    "Lyon": (45.764, 4.8357),
    "Toulouse": (43.6047, 1.4442),
    "Nice": (43.7102, 7.262),
    "Nantes": (47.2184, -1.5536),
    "Strasbourg": (48.5734, 7.7521),
    "Montpellier": (43.6119, 3.8772),
    "Bordeaux": (44.8378, -0.5792),
    "Lille": (50.6292, 3.0573),
    "Rennes": (48.1173, -1.6778),
    "Reims": (49.2583, 4.0317),
    "Le Havre": (49.4944, 0.1079),
    "Saint-Étienne": (45.4397, 4.3872),
    "Toulon": (43.1242, 5.928),
    "Grenoble": (45.1885, 5.7245),
    "Dijon": (47.322, 5.0415),
    "Angers": (47.4784, -0.5632),
    "Nîmes": (43.8367, 4.3601),
    "Clermont-Ferrand": (45.7772, 3.087),
}

# --- Étape 2 : Fonction distance Haversine ---
def haversine(coord1, coord2):
    R = 6371  # Rayon de la Terre en km
    lat1, lon1 = map(math.radians, coord1)
    lat2, lon2 = map(math.radians, coord2)
    dlat = lat2 - lat1
    dlon = lon2 - lon1
    a = (math.sin(dlat/2)**2 +
         math.cos(lat1) * math.cos(lat2) * math.sin(dlon/2)**2)
    c = 2 * math.asin(math.sqrt(a))
    return R * c

# --- Étape 3 : Construction du graphe ---
G = nx.Graph()

# Ajout des sommets
for ville, (lat, lon) in villes.items():
    G.add_node(ville, pos=(lon, lat))  # (lon, lat) pour un affichage carte

# Ajout des arêtes pondérées
for v1, (lat1, lon1) in villes.items():
    for v2, (lat2, lon2) in villes.items():
        if v1 != v2:
            dist = haversine((lat1, lon1), (lat2, lon2))
            G.add_edge(v1, v2, weight=dist)

# --- Étape 4 : Affichage du graphe sur la carte de France ---
plt.figure(figsize=(10, 10))
pos = nx.get_node_attributes(G, 'pos')

# Tracé du réseau (toutes les arêtes)
"""nx.draw_networkx_edges(G, pos, alpha=0.2, width=0.5)"""

# Tracé des sommets
nx.draw_networkx_nodes(G, pos, node_size=100, node_color='red')

# Noms des villes
nx.draw_networkx_labels(G, pos, font_size=8, font_color='black')

plt.title("Réseau des 20 principales villes françaises (distances Haversine)", fontsize=12)
plt.xlabel("Longitude")
plt.ylabel("Latitude")
plt.grid(True)
plt.show()
